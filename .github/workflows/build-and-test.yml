name: Test Design Patterns

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt' # or 'temurin', 'zulu', etc.
          java-version: '17' # replace with your required Java version

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/.gradle/caches
          key: "${{ runner.os }}-gradle-${{ hashFiles('**/build.gradle') }}"
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permissions for gradlew
        run: chmod +x $(find . -type f -name "gradlew" &2>/dev/null)

      - name: Build with Gradle
        run: |
          GRADLEWS=$(find . -type f -name "gradlew" &2>/dev/null)
          if [ -z "$GRADLEWS" ]; then
              echo "No gradlew script found"
              exit 1
          fi
          # Loop through all gradlew scripts found and build each one
          for GRADLEW in $GRADLEWS; do
              echo "Building $GRADLEW"
              $GRADLEW clean build --stacktrace && echo "Build passed" || echo "Build failed"
          done

      - name: Run Tests
        run: |
          GRADLEWS=$(find . -type f -name "gradlew" &2>/dev/null)
          if [ -z "$GRADLEWS" ]; then
              echo "No gradlew script found"
              exit 1
          fi
          # Loop through all gradlew scripts found and test each one
          for GRADLEW in $GRADLEWS; do
              echo "Testing $GRADLEW"
              $GRADLEW test --stacktrace && echo "Test passed" || echo "Test failed"
          done


#      # Test each module
#      - name: Test Factory Module
#        run: cd ./Factory && ./gradlew test --stacktrace
#        continue-on-error: true
#
#      - name: Test Prototype Module
#        run: cd ./Prototype && ./gradlew test --stacktrace
#        continue-on-error: true
#
#      - name: Test Singleton Module
#        run: cd ./Singleton && ./gradlew test --stacktrace
#        continue-on-error: true

      # You can add more test steps for other modules
      - name: Upload test results as artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: test_results
          path: |
            **/build/test-results/**/*.xml